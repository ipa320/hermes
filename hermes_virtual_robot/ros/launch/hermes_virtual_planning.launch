<launch>
	<!-- TF world to pillar -->
	<node pkg="tf" type="static_transform_publisher" name="map_world" args="0 0 0 0 0 0 map world 100" />
	<node pkg="tf" type="static_transform_publisher" name="world_pillar" args="0 0 0 0 0 0 world pillar 100" />



	<!-- Load universal robotic description format (URDF) -->
	<param name="robot_description" command="cat $(find hermes_virtual_robot)/ros/urdf/hermes.urdf" />
	<!-- The semantic description that corresponds to the URDF -->
  	<param name="robot_description_semantic" textfile="$(find hermes_virtual_robot)/ros/config/HermesRobot.srdf" />

	<group ns="robot_description_planning">    
   	 <rosparam command="load" file="$(find hermes_moveit_generated)/config/joint_limits.yaml"/>
 	</group>

	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>


	<!-- Node from hermes_virtual_robot -->
	<node name="hermes_virtual_robot" pkg="hermes_virtual_robot" type="hermes_virtual_robot_main" respawn="false" output="screen" />




	<!-- move_group node for trajectories -->
	 <include file="$(find hermes_virtual_robot)/ros/launch/hermes_move_group.launch">
         <arg name="allow_trajectory_execution" value="true"/>
        </include>


	<!-- Rviz Visualization-->
	<arg name="config" value="true" />
 	<arg unless="$(arg config)" name="command_args" value="" />
	<arg     if="$(arg config)" name="command_args" value="-d $(find hermes_virtual_robot)/ros/launch/rviz_planning.rviz" />
  
  	<node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
		args="$(arg command_args)" output="screen">
	</node>
</launch>
